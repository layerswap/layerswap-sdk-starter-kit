import { BaseAPIRequestFactory } from './baseapi';
import { Configuration } from '../configuration';
import { RequestContext, ResponseContext } from '../http/http';
import { EventTypeExampleOut } from '../models/EventTypeExampleOut';
import { EventTypeIn } from '../models/EventTypeIn';
import { EventTypeOut } from '../models/EventTypeOut';
import { EventTypePatch } from '../models/EventTypePatch';
import { EventTypeSchemaIn } from '../models/EventTypeSchemaIn';
import { EventTypeUpdate } from '../models/EventTypeUpdate';
import { ListResponseEventTypeOut } from '../models/ListResponseEventTypeOut';
import { Ordering } from '../models/Ordering';
export declare class EventTypeApiRequestFactory extends BaseAPIRequestFactory {
    patchEventType(eventTypeName: string, eventTypePatch: EventTypePatch, _options?: Configuration): Promise<RequestContext>;
    v1EventTypeCreate(eventTypeIn: EventTypeIn, idempotencyKey?: string, _options?: Configuration): Promise<RequestContext>;
    v1EventTypeDelete(eventTypeName: string, expunge?: boolean, _options?: Configuration): Promise<RequestContext>;
    v1EventTypeGenerateExample(eventTypeSchemaIn: EventTypeSchemaIn, idempotencyKey?: string, _options?: Configuration): Promise<RequestContext>;
    v1EventTypeGet(eventTypeName: string, _options?: Configuration): Promise<RequestContext>;
    v1EventTypeList(limit?: number, iterator?: string, order?: Ordering, includeArchived?: boolean, withContent?: boolean, _options?: Configuration): Promise<RequestContext>;
    v1EventTypeUpdate(eventTypeName: string, eventTypeUpdate: EventTypeUpdate, _options?: Configuration): Promise<RequestContext>;
}
export declare class EventTypeApiResponseProcessor {
    patchEventType(response: ResponseContext): Promise<EventTypeOut>;
    v1EventTypeCreate(response: ResponseContext): Promise<EventTypeOut>;
    v1EventTypeDelete(response: ResponseContext): Promise<void>;
    v1EventTypeGenerateExample(response: ResponseContext): Promise<EventTypeExampleOut>;
    v1EventTypeGet(response: ResponseContext): Promise<EventTypeOut>;
    v1EventTypeList(response: ResponseContext): Promise<ListResponseEventTypeOut>;
    v1EventTypeUpdate(response: ResponseContext): Promise<EventTypeOut>;
}
