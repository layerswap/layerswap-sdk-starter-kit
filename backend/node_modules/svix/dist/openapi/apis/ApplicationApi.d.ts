import { BaseAPIRequestFactory } from './baseapi';
import { Configuration } from '../configuration';
import { RequestContext, ResponseContext } from '../http/http';
import { ApplicationIn } from '../models/ApplicationIn';
import { ApplicationOut } from '../models/ApplicationOut';
import { ApplicationPatch } from '../models/ApplicationPatch';
import { ApplicationStats } from '../models/ApplicationStats';
import { ListResponseApplicationOut } from '../models/ListResponseApplicationOut';
import { ListResponseApplicationStats } from '../models/ListResponseApplicationStats';
import { Ordering } from '../models/Ordering';
export declare class ApplicationApiRequestFactory extends BaseAPIRequestFactory {
    getAppUsageStatsApiV1AppStatsUsageGet(since: Date, until: Date, limit?: number, iterator?: string, _options?: Configuration): Promise<RequestContext>;
    patchApplication(appId: string, applicationPatch: ApplicationPatch, _options?: Configuration): Promise<RequestContext>;
    v1ApplicationCreate(applicationIn: ApplicationIn, getIfExists?: boolean, idempotencyKey?: string, _options?: Configuration): Promise<RequestContext>;
    v1ApplicationDelete(appId: string, _options?: Configuration): Promise<RequestContext>;
    v1ApplicationGet(appId: string, _options?: Configuration): Promise<RequestContext>;
    v1ApplicationGetStats(since: Date, until: Date, appId: string, _options?: Configuration): Promise<RequestContext>;
    v1ApplicationList(limit?: number, iterator?: string, order?: Ordering, _options?: Configuration): Promise<RequestContext>;
    v1ApplicationUpdate(appId: string, applicationIn: ApplicationIn, _options?: Configuration): Promise<RequestContext>;
}
export declare class ApplicationApiResponseProcessor {
    getAppUsageStatsApiV1AppStatsUsageGet(response: ResponseContext): Promise<ListResponseApplicationStats>;
    patchApplication(response: ResponseContext): Promise<ApplicationOut>;
    v1ApplicationCreate(response: ResponseContext): Promise<ApplicationOut>;
    v1ApplicationDelete(response: ResponseContext): Promise<void>;
    v1ApplicationGet(response: ResponseContext): Promise<ApplicationOut>;
    v1ApplicationGetStats(response: ResponseContext): Promise<ApplicationStats>;
    v1ApplicationList(response: ResponseContext): Promise<ListResponseApplicationOut>;
    v1ApplicationUpdate(response: ResponseContext): Promise<ApplicationOut>;
}
