import { BaseAPIRequestFactory } from './baseapi';
import { Configuration } from '../configuration';
import { RequestContext, ResponseContext } from '../http/http';
import { BackgroundTaskOut } from '../models/BackgroundTaskOut';
import { BackgroundTaskStatus } from '../models/BackgroundTaskStatus';
import { BackgroundTaskType } from '../models/BackgroundTaskType';
import { ListResponseBackgroundTaskOut } from '../models/ListResponseBackgroundTaskOut';
import { Ordering } from '../models/Ordering';
export declare class BackgroundTasksApiRequestFactory extends BaseAPIRequestFactory {
    getBackgroundTask(taskId: string, _options?: Configuration): Promise<RequestContext>;
    listBackgroundTasks(status?: BackgroundTaskStatus, task?: BackgroundTaskType, limit?: number, iterator?: string, order?: Ordering, _options?: Configuration): Promise<RequestContext>;
}
export declare class BackgroundTasksApiResponseProcessor {
    getBackgroundTask(response: ResponseContext): Promise<BackgroundTaskOut>;
    listBackgroundTasks(response: ResponseContext): Promise<ListResponseBackgroundTaskOut>;
}
