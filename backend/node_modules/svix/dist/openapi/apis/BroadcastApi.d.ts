import { BaseAPIRequestFactory } from './baseapi';
import { Configuration } from '../configuration';
import { RequestContext, ResponseContext } from '../http/http';
import { MessageBroadcastIn } from '../models/MessageBroadcastIn';
import { MessageBroadcastOut } from '../models/MessageBroadcastOut';
export declare class BroadcastApiRequestFactory extends BaseAPIRequestFactory {
    createBroadcastMessage(messageBroadcastIn: MessageBroadcastIn, idempotencyKey?: string, _options?: Configuration): Promise<RequestContext>;
}
export declare class BroadcastApiResponseProcessor {
    createBroadcastMessage(response: ResponseContext): Promise<MessageBroadcastOut>;
}
